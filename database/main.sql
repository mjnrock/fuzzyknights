-- CREATE DATABASE FuzzyKnights
-- GO


-- CREATE SCHEMA DotF
-- GO

USE FuzzyKnights
GO


IF OBJECT_ID('DotF.MapTile') IS NOT NULL DROP TABLE DotF.MapTile;
IF OBJECT_ID('DotF.Map') IS NOT NULL DROP TABLE DotF.Map;
IF OBJECT_ID('DotF.Terrain') IS NOT NULL DROP TABLE DotF.Terrain;

IF OBJECT_ID('DotF.SpriteSheetSprite') IS NOT NULL DROP TABLE DotF.SpriteSheetSprite;
IF OBJECT_ID('DotF.SpriteSheet') IS NOT NULL DROP TABLE DotF.SpriteSheet;
IF OBJECT_ID('DotF.Sprite') IS NOT NULL DROP TABLE DotF.Sprite;
IF OBJECT_ID('DotF.Step') IS NOT NULL DROP TABLE DotF.Step;
IF OBJECT_ID('DotF.Frame') IS NOT NULL DROP TABLE DotF.Frame;
IF OBJECT_ID('DotF.Cadence') IS NOT NULL DROP TABLE DotF.Cadence;
IF OBJECT_ID('DotF.[Sequence]') IS NOT NULL DROP TABLE DotF.[Sequence];
IF OBJECT_ID('DotF.Texture') IS NOT NULL DROP TABLE DotF.Texture;

IF OBJECT_ID('DotF.Namespace') IS NOT NULL DROP TABLE DotF.[Namespace];
GO


CREATE TABLE DotF.[Namespace] (
	NamespaceID INT IDENTITY(1, 1) PRIMARY KEY,
	ParentNamespaceID INT FOREIGN KEY REFERENCES DotF.[Namespace](NamespaceID),
	[Name] VARCHAR(255) NOT NULL,
	
	[Tags] NVARCHAR(MAX) NULL,
	Meta NVARCHAR(MAX) NULL,
	UUID UNIQUEIDENTIFIER NULL UNIQUE DEFAULT NEWID(),
);
INSERT INTO DotF.[Namespace] (ParentNamespaceID, [Name])
VALUES
	(NULL, 'DotF');


CREATE TABLE DotF.Texture (
	TextureID INT IDENTITY(1, 1) PRIMARY KEY,
	[Name] VARCHAR(255) NOT NULL,
	[Base64] NVARCHAR(MAX) NOT NULL,
	
	[Tags] NVARCHAR(MAX) NULL,
	Meta NVARCHAR(MAX) NULL,
	UUID UNIQUEIDENTIFIER NULL UNIQUE DEFAULT NEWID(),
	NamespaceID INT NULL FOREIGN KEY REFERENCES DotF.[Namespace](NamespaceID) DEFAULT 1,
);


CREATE TABLE DotF.[Sequence] (
	SequenceID INT IDENTITY(1, 1) PRIMARY KEY,
	[Name] VARCHAR(255) NOT NULL,
	
	[Tags] NVARCHAR(MAX) NULL,
	Meta NVARCHAR(MAX) NULL,
	UUID UNIQUEIDENTIFIER NULL UNIQUE DEFAULT NEWID(),
	NamespaceID INT NULL FOREIGN KEY REFERENCES DotF.[Namespace](NamespaceID) DEFAULT 1,
);
CREATE TABLE DotF.Frame (
	FrameID INT IDENTITY(1, 1) PRIMARY KEY,
	SequenceID INT FOREIGN KEY REFERENCES DotF.[Sequence](SequenceID),
	TextureID INT FOREIGN KEY REFERENCES DotF.Texture(TextureID),
	[Order] INT NOT NULL,
	
	Meta NVARCHAR(MAX) NULL,
	UUID UNIQUEIDENTIFIER NULL UNIQUE DEFAULT NEWID(),
	NamespaceID INT NULL FOREIGN KEY REFERENCES DotF.[Namespace](NamespaceID) DEFAULT 1,
);


CREATE TABLE DotF.Cadence (
	CadenceID INT IDENTITY(1, 1) PRIMARY KEY,
	[Name] VARCHAR(255) NOT NULL,
	
	[Tags] NVARCHAR(MAX) NULL,
	Meta NVARCHAR(MAX) NULL,
	UUID UNIQUEIDENTIFIER NULL UNIQUE DEFAULT NEWID(),
	NamespaceID INT NULL FOREIGN KEY REFERENCES DotF.[Namespace](NamespaceID) DEFAULT 1,
);
CREATE TABLE DotF.Step (
	StepID INT IDENTITY(1, 1) PRIMARY KEY,
	CadenceID INT FOREIGN KEY REFERENCES DotF.Cadence(CadenceID),
	Duration INT NOT NULL,
	
	Meta NVARCHAR(MAX) NULL,
	UUID UNIQUEIDENTIFIER NULL UNIQUE DEFAULT NEWID(),
	NamespaceID INT NULL FOREIGN KEY REFERENCES DotF.[Namespace](NamespaceID) DEFAULT 1,
);


CREATE TABLE DotF.Sprite (
	SpriteID INT IDENTITY(1, 1) PRIMARY KEY,
	[Name] VARCHAR(255) NOT NULL,
	SequenceID INT FOREIGN KEY REFERENCES DotF.[Sequence](SequenceID),
	CadenceID INT FOREIGN KEY REFERENCES DotF.Cadence(CadenceID),
	
	[Tags] NVARCHAR(MAX) NULL,
	Meta NVARCHAR(MAX) NULL,
	UUID UNIQUEIDENTIFIER NULL UNIQUE DEFAULT NEWID(),
	NamespaceID INT NULL FOREIGN KEY REFERENCES DotF.[Namespace](NamespaceID) DEFAULT 1,
);
CREATE TABLE DotF.SpriteSheet (
	SpriteSheetID INT IDENTITY(1, 1) PRIMARY KEY,
	[Name] VARCHAR(255) NOT NULL,
	
	Meta NVARCHAR(MAX) NULL,
	UUID UNIQUEIDENTIFIER NULL UNIQUE DEFAULT NEWID(),
	NamespaceID INT NULL FOREIGN KEY REFERENCES DotF.[Namespace](NamespaceID) DEFAULT 1,
);
CREATE TABLE DotF.SpriteSheetSprite (
	SpriteSheetSpriteID INT IDENTITY(1, 1) PRIMARY KEY,
	SpriteSheetID INT FOREIGN KEY REFERENCES DotF.SpriteSheet(SpriteSheetID),
	SpriteID INT FOREIGN KEY REFERENCES DotF.Sprite(SpriteID),
	[Order] INT NOT NULL,
	
	Meta NVARCHAR(MAX) NULL,
	UUID UNIQUEIDENTIFIER NULL UNIQUE DEFAULT NEWID(),
	NamespaceID INT NULL FOREIGN KEY REFERENCES DotF.[Namespace](NamespaceID) DEFAULT 1,
);


CREATE TABLE DotF.Terrain (
	TerrainID INT IDENTITY(1, 1) PRIMARY KEY,
	[Name] VARCHAR(255) NOT NULL,
	Cost INT NOT NULL,
	Mask INT NULL DEFAULT 0,
	[Data] NVARCHAR(MAX) NULL,

	[Tags] NVARCHAR(MAX) NULL,
	Meta NVARCHAR(MAX) NULL,
	UUID UNIQUEIDENTIFIER NULL UNIQUE DEFAULT NEWID(),
	NamespaceID INT NULL FOREIGN KEY REFERENCES DotF.[Namespace](NamespaceID) DEFAULT 1,
);
CREATE TABLE DotF.Map (
	MapID INT IDENTITY(1, 1) PRIMARY KEY,
	[Name] VARCHAR(255) NOT NULL,
	[Rows] INT NOT NULL,
	[Columns] INT NOT NULL,

	[Tags] NVARCHAR(MAX) NULL,
	Meta NVARCHAR(MAX) NULL,
	UUID UNIQUEIDENTIFIER NULL UNIQUE DEFAULT NEWID(),
	NamespaceID INT NULL FOREIGN KEY REFERENCES DotF.[Namespace](NamespaceID) DEFAULT 1,
);
CREATE TABLE DotF.MapTile (
	MapTileID INT IDENTITY(1, 1) PRIMARY KEY,
	MapID INT FOREIGN KEY REFERENCES DotF.Map(MapID),
	TerrainID INT FOREIGN KEY REFERENCES DotF.Terrain(TerrainID),
	[Row] INT NOT NULL,
	[Column] INT NOT NULL,
	
	[Tags] NVARCHAR(MAX) NULL,
	Meta NVARCHAR(MAX) NULL,
	UUID UNIQUEIDENTIFIER NULL UNIQUE DEFAULT NEWID(),
	NamespaceID INT NULL FOREIGN KEY REFERENCES DotF.[Namespace](NamespaceID) DEFAULT 1,
);